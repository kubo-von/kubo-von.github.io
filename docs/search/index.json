[{"content":"I\u0026rsquo;ve recently spent some time trying to make Maya 2020 work on PopOS 20.10. I was helping a friend, luckily I have no use for Maya myself anymore. But since this might be helpful for someone, I thought I\u0026rsquo;d share. I was using PopOS but all the steps except the last one should apply to ubuntu 20.10 too. Maya running on Ubuntu 20.10 Autodesk provides a GUIDE for installing Maya 2020 on Ubuntu 20.04 Most of the steps are still valid so I will just point out what I did differently. Different steps Step 2  Since libXp6 in ppa:zeehio/libxp is no longer being updated, I\u0026rsquo;ve downloaded and manually installed the libxp - 1:1.0.2-2ubuntu1~20.04 package from HERE Step 6  I used command sudo dpkg -i xxx.deb instead of sudo apt-get install ./xxx.deb\nStep 8  I used command sudo dpkg -i xxx.deb instead of sudo apt-get install ./xxx.deb\nStep 11  folder ~/tmp probably doesn\u0026rsquo;t exist on your system so create it or just use some that exists.When you try to run Maya at the end, you\u0026rsquo;ll likely get some errors. Resolving Errors when starting Maya  First some Usefull comandsShow which libraries Maya is picking up: {% highlight shell %} ldd /usr/autodesk/maya2020/bin/maya.bin {% endhighlight %} Crash logs: (scroll down) {% highlight shell %} gedit /var/log/kern.log {% endhighlight %}\nIf you get \u0026ldquo;hash md5 was not found\u0026rdquo; {% highlight shell %} cd /usr/autodesk/maya2020/lib/python2.7/lib-dynload sudo mv _hashlib.so rhel_hashlib.so sudo cp /usr/autodesk/maya2020/support/python/2.7.11/ubuntu_hashlib.so _hashlib.so sudo cp /usr/lib/python2.7/lib-dynload/_hashlib.x86_64-linux-gnu.so _hashlib.so {% endhighlight %}\nIf you get \u0026ldquo;libtbb_preview.so.2 not found\u0026rdquo; {% highlight shell %} sudo ln -s /usr/lib/x86_64-linux-gnu/libtbb.so.2 /usr/lib/x86_64-linux-gnu/libtbb_preview.so.2 {% endhighlight %}\nIf you get libssl errors {% highlight shell %} sudo ln -sf /opt/Autodesk/Adlm/R17/lib64/libssl.so.1.0.0 /usr/autodesk/maya2020/lib/libssl.so.10 sudo ln -sf /opt/Autodesk/Adlm/R17/lib64/libcrypto.so.1.0.2 /usr/autodesk/maya2020/lib/libcrypto.so.1.0.2 {% endhighlight %}\nIf you get libffi.so.8 error This one was the hardest to crack. libffi was updated since 20.04 and Maya hates the new version.\n My helpful screenshot The solution is to get the older version of this library: libffi.so.7.1.0 and force it to Maya by using: {% highlight shell %} export LD_PRELOAD=\u0026quot;/pathToTheLibrary/libffi.so.7.1.0\u0026quot; {% endhighlight %} in terminal before running maya by: {% highlight shell %} /usr/autodesk/maya2020/bin/maya {% endhighlight %}\nTo get this library on PopOS I just installed the .deb from ubuntuupdates.org I installed the version for focal (downagrading) and then installed the groovy (upgrading back again) That gave me the 7.1.0 version in /usr/lib/x86_64-linux-gnu/, without messing up my system too much. Then I could just run {% highlight shell %} export LD_PRELOAD=\u0026quot;/usr/lib/x86_64-linux-gnu/libffi.so.7.1.0\u0026quot; /usr/autodesk/maya2020/bin/maya {% endhighlight %}\nOn bare Ubuntu its a bit more complicated because it doesn\u0026rsquo;t let you downgrade the package so easily, but try searching your system for libffi.so.7.1.0, you probably have it as part of some app somewhere, in which case try to force the path to it with LD_PRELOAD.\nYou will have to use LD_PRELOAD every time before running Maya, so it migh be good creting some imple .sh script for that.\nHope that helps\nCheers\n","date":"2020-02-25T00:00:00Z","image":"https://kubo-von.github.io/p/installing-maya-on-popos-and-ubuntu-20.10/error_hu25efaa63f020bddfcbd9b21915e4f6ee_64319_120x120_fill_q75_box_smart1.jpg","permalink":"https://kubo-von.github.io/p/installing-maya-on-popos-and-ubuntu-20.10/","title":"Installing Maya On Pop!OS and Ubuntu 20.10"},{"content":"USD For more info about what is USD and why it could interest you, check here:Pixar USD pageSideFX\u0026rsquo;s USD-based SOLARIS project.Since version 17 Houdini comes with USD plugins. There is a catch though, you have to compile them yourself.There is a video from Rachid Abderrahmane. on compiling the plugins on Windows.Even though compiling the plugins on Linux is much more simple, this could save someone a couple minutes.Steps I\u0026rsquo;m using popOS which is based on Ubuntu. On other linux distros the commands migth slightly differ.Start by installing cmake in terminal:{% highlight shell %} sudo apt install cmake {% endhighlight %}\nLet\u0026rsquo;s say you have Houdini installed in /opt/hfs17.5.173/Under folder toolkit there is usd_houdini_pluginsfolder. My helpful screenshot Copy that folder to e.g. home/YOUR_USER/Documents/temp/(to avoid problem with user premissions) My helpful screenshot Make folder called buildunder the usd_houdini_plugins folder. My helpful screenshot in terminal cd to this folder: {% highlight shell %} cd /home/YOUR_USER/Documents/temp/usd_houdini_plugins {% endhighlight %}\nexport CMAKE_PREFIX_PATH variable: {% highlight shell %} export CMAKE_PREFIX_PATH=\u0026quot;/opt/hfs17.5.173/toolkit/cmake\u0026quot; {% endhighlight %}\nBuild the plugins: {% highlight shell %} cmake /opt/hfs17.5.173/toolkit/usd_houdini_plugins {% endhighlight %}\nAnd install: {% highlight shell %} make -j8 install {% endhighlight %}\n My helpful screenshot \nIf everything went ok, then after starting Houdini you should be able to create USD nodes. For more info about how to use them go to USD Houdini documentation My helpful screenshot \n","date":"2019-07-31T00:00:00Z","image":"https://kubo-von.github.io/p/compiling-houdini-usd-plugins-on-linux/teaser_hu18a02c901f76f368346e663bd7b069d9_80148_120x120_fill_q75_box_smart1.jpg","permalink":"https://kubo-von.github.io/p/compiling-houdini-usd-plugins-on-linux/","title":"Compiling Houdini USD plugins on Linux"}]